{"ast":null,"code":"var _jsxFileName = \"/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState({\n    options: {\n      chart: {\n        id: \"basic-bar\",\n        events: {\n          dataPointMouseEnter: function (event, chartContext, config) {\n            Streamlit.setComponentValue('hello ');\n            // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\n          }\n        }\n      },\n      xaxis: {\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n      }\n    },\n    series: [{\n      name: \"series-1\",\n      data: [30, 40, 45, 50, 49, 60, 70, 91]\n    }]\n  });\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mixed-chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: count.options,\n          series: count.series,\n          type: \"bar\",\n          width: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zLimDyvBnuuHKTU2LPco5/ciKrw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chart","Streamlit","jsxDEV","_jsxDEV","App","props","_s","count","setCount","options","chart","id","events","dataPointMouseEnter","event","chartContext","config","setComponentValue","xaxis","categories","series","name","data","console","log","className","children","type","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx"],"sourcesContent":["\nimport React, { Component ,useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n  } from \"streamlit-component-lib\"\n\nfunction App(props:any) {\n    // Declare a new state variable, which we'll call \"count\"\n    const [count, setCount] = useState( {\n        options: {\n          chart: {\n            id: \"basic-bar\" , \n\n            events : {\n                dataPointMouseEnter: function(event : any , chartContext :any , config :any ) {\n    \n                    Streamlit.setComponentValue('hello ')\n                    // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\n                  }\n            }\n    \n\n\n\n          },\n          xaxis: {\n            categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n          }\n        },\n        series: [\n          {\n            name: \"series-1\",\n            data: [30, 40, 45, 50, 49, 60, 70, 91]\n          }\n        ] , \n\n\n\n\n      });\n\n\n    console.log(props)\n  \n    return (\n        <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={count.options}\n              series={count.series} \n              type=\"bar\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n\n\nexport default App;"],"mappings":";;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SACIC,SAAS,QAGJ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAACC,KAAS,EAAE;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAE;IAChCU,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,EAAE,EAAE,WAAW;QAEfC,MAAM,EAAG;UACLC,mBAAmB,EAAE,SAAAA,CAASC,KAAW,EAAGC,YAAiB,EAAGC,MAAW,EAAG;YAE1Ef,SAAS,CAACgB,iBAAiB,CAAC,QAAQ,CAAC;YACrC;UACF;QACN;MAKF,CAAC;MACDC,KAAK,EAAE;QACLC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MACnE;IACF,CAAC;IACDC,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACvC,CAAC;EAML,CAAC,CAAC;EAGJC,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC;EAElB,oBACIF,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBvB,OAAA;MAAKsB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBvB,OAAA;QAAKsB,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BvB,OAAA,CAACH,KAAK;UACJS,OAAO,EAAEF,KAAK,CAACE,OAAQ;UACvBW,MAAM,EAAEb,KAAK,CAACa,MAAO;UACrBO,IAAI,EAAC,KAAK;UACVC,KAAK,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CApDMF,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}