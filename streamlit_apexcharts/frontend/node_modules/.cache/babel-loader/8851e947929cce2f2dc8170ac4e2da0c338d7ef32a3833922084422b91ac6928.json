{"ast":null,"code":"var _jsxFileName = \"/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventCallback(event, chartContext, config) {\n  Streamlit.setComponentValue(config.selectedDataPoints);\n}\n_c = EventCallback;\nfunction App(props) {\n  _s();\n  // var config = props.chart_dict \n\n  // Declare a new state variable, which we'll call \"count\"\n  // const [chartDict, setChartDict] = useState( props.chart_dict )\n\n  const [options, setOptions] = useState(props.chart_dict.options);\n  const [series, setSeries] = useState(props.chart_dict.series);\n  const [index, setIndex] = useState(props.chart_dict.index);\n  function updateOptions() {}\n  useEffect(() => {}, []);\n  console.log(\"rerender : \", options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mixed-chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"  \", options.chart.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: series,\n          type: options.chart.type,\n          width: options.chart.width,\n          height: options.chart.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8NbIealNZJdVBW5aNmB1s2OgX4Y=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventCallback\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Streamlit","jsxDEV","_jsxDEV","EventCallback","event","chartContext","config","setComponentValue","selectedDataPoints","_c","App","props","_s","options","setOptions","chart_dict","series","setSeries","index","setIndex","updateOptions","console","log","className","children","chart","type","fileName","_jsxFileName","lineNumber","columnNumber","width","height","_c2","$RefreshReg$"],"sources":["/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx"],"sourcesContent":["\nimport React, { Component ,useState , useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n  } from \"streamlit-component-lib\"\n\n\n  function EventCallback (event :any , chartContext :any , config :any ) {\n\n    Streamlit.setComponentValue(config.selectedDataPoints)\n\n  }\n\n\n\n\nfunction App(props:any) {\n\n    // var config = props.chart_dict \n\n    // Declare a new state variable, which we'll call \"count\"\n    // const [chartDict, setChartDict] = useState( props.chart_dict )\n\n    const [options, setOptions] = useState( props.chart_dict.options  )\n    const [series, setSeries] = useState( props.chart_dict.series )\n    const [index, setIndex] = useState( props.chart_dict.index )\n\n\n    function updateOptions() {\n\n        \n    }\n\n\n    useEffect( \n        \n        () => {\n\n\n\n    } , [] ) \n\n\n    console.log(\"rerender : \" , options)\n\n\n    return (\n        <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n\n            <div>  {options.chart.type}</div>\n            <Chart\n              options={options}\n              series={series} \n              type= {options.chart.type}\n              width= {options.chart.width}\n              height= {options.chart.height}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n\n\nexport default App;"],"mappings":";;AACA,OAAOA,KAAK,IAAeC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SACIC,SAAS,QAGJ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,aAAaA,CAAEC,KAAU,EAAGC,YAAiB,EAAGC,MAAW,EAAG;EAErEN,SAAS,CAACO,iBAAiB,CAACD,MAAM,CAACE,kBAAkB,CAAC;AAExD;AAACC,EAAA,GAJQN,aAAa;AASxB,SAASO,GAAGA,CAACC,KAAS,EAAE;EAAAC,EAAA;EAEpB;;EAEA;EACA;;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAEc,KAAK,CAACI,UAAU,CAACF,OAAS,CAAC;EACnE,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAEc,KAAK,CAACI,UAAU,CAACC,MAAO,CAAC;EAC/D,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAEc,KAAK,CAACI,UAAU,CAACG,KAAM,CAAC;EAG5D,SAASE,aAAaA,CAAA,EAAG,CAGzB;EAGAtB,SAAS,CAEL,MAAM,CAIV,CAAC,EAAG,EAAG,CAAC;EAGRuB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAGT,OAAO,CAAC;EAGpC,oBACIX,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBtB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBtB,OAAA;QAAKqB,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAE1BtB,OAAA;UAAAsB,QAAA,GAAK,IAAE,EAACX,OAAO,CAACY,KAAK,CAACC,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjC5B,OAAA,CAACH,KAAK;UACJc,OAAO,EAAEA,OAAQ;UACjBG,MAAM,EAAEA,MAAO;UACfU,IAAI,EAAGb,OAAO,CAACY,KAAK,CAACC,IAAK;UAC1BK,KAAK,EAAGlB,OAAO,CAACY,KAAK,CAACM,KAAM;UAC5BC,MAAM,EAAGnB,OAAO,CAACY,KAAK,CAACO;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA/CMF,GAAG;AAAAuB,GAAA,GAAHvB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}