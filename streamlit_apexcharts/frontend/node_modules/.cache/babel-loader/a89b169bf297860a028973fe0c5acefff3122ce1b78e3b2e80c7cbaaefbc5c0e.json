{"ast":null,"code":"var _jsxFileName = \"/home/kobe/Project/streamlit-apexcharts/streamlit_apexcharts/frontend/src/ChartStreamlit.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Streamlit } from \"streamlit-component-lib\";\n\n// var t =  {\n\n//       dataPointMouseEnter : {type : 'mouseenter'  , return : [ 'seriesIndex'  ,  'dataPointIndex' ]  } ,  \n\n//       dataPointSelection : {type :  'mousedown' , return : ['seriesIndex' , 'dataPointIndex' ,  'selectedDataPoints']  }\n\n//  }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventCallback(event, chartContext, config, eventType) {\n  // console.log(event)\n\n  // // console.log(chartContext)\n  // console.log(config)\n\n  // var eventType = event.type \n\n  Streamlit.setComponentValue({\n    [eventType]: {\n      dataPointIndex: config.dataPointIndex,\n      seriesIndex: config.seriesIndex,\n      selectedDataPoints: \"selectedDataPoints\" in config ? config[\"selectedDataPoints\"] : null\n    }\n  });\n\n  // if (eventType == \"mousedown\") {\n\n  //   var dataPoint =config.selectedDataPoints\n\n  //   var dataPointMap = dataPoint.map( (k :any   , i :any )=>    { \n\n  //     if ( k !== null ) {\n\n  //         // var dataPoindexList = dataPoint[i]\n\n  //         // dataPoindexList\n\n  //         return {\n  //             columns  : [index[\"columns\"][i]],  \n  //             index :  [index[\"index\"][dataPoint[i]]]\n  //         }\n\n  //     }\n\n  //   }  );\n\n  //   dataPointMap = dataPointMap.filter((k:any) => k!= null )\n\n  //   Streamlit.setComponentValue(dataPointMap)   \n\n  // } else {\n\n  //   var dataSeries =config.seriesIndex \n\n  //   var dataPoint = config.dataPointIndex\n\n  //   Streamlit.setComponentValue([ {columns : [index[\"columns\"][dataSeries] ] ,index : [index[\"index\"][dataPoint] ]}])  \n\n  // }\n}\n_c = EventCallback;\nconst changeFormatterTofuntion = options => {\n  var Formatter = {\n    ...options\n  };\n  // var ChangeFormater = {}\n\n  Object.keys(Formatter).map((k, i) => {\n    if (k in {\n      xaxis: [],\n      yaxis: []\n    }) {\n      if (Array.isArray(Formatter[k])) {\n        // console.log(Formatter[k])\n\n        Formatter[k].map((l, i) => {\n          if (\"labels\" in Formatter[k][i]) {\n            if (\"formatter\" in Formatter[k][i][\"labels\"]) {\n              Formatter[k][i][\"labels\"][\"formatter\"] = eval(Formatter[k][i][\"labels\"][\"formatter\"]);\n            }\n          }\n          ;\n        });\n      } else {\n        if (\"labels\" in Formatter[k]) {\n          if (\"formatter\" in Formatter[k][\"labels\"]) {\n            Formatter[k][\"labels\"][\"formatter\"] = eval(Formatter[k][\"labels\"][\"formatter\"]);\n          }\n        }\n        ;\n      }\n      ;\n    }\n    ;\n  });\n  return Formatter;\n};\nconst changeEvents = options => {\n  var newEvents = {\n    ...options.chart.events\n  };\n  Object.keys(newEvents).forEach(k => {\n    newEvents[k] = newEvents[k] ? (event, chartContext, config) => {\n      EventCallback(event, chartContext, config, k);\n    } : null;\n  });\n  var newOptions = {\n    ...options,\n    chart: {\n      ...options.chart,\n      events: newEvents\n    }\n  };\n  return newOptions;\n};\nconst changeOption = options => {\n  return changeFormatterTofuntion(changeEvents(options));\n};\nfunction StreamlitCharts(props) {\n  _s();\n  const [options, setOptions] = useState(changeOption(props.chart_dict.options));\n  const chart = useRef();\n  useEffect(() => {\n    console.log(\"effect\");\n    var newOptions = changeOption(props.chart_dict.options);\n\n    // chart.hideSeries('Cricket')\n\n    console.log(chart);\n    setOptions(newOptions);\n  }, [JSON.stringify(props.chart_dict.options)]);\n  console.log(\"rerender\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mixed-chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: props.chart_dict.series,\n          type: options.chart.type,\n          width: props.width,\n          height: options.chart.height,\n          ref: chart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n}\n_s(StreamlitCharts, \"7zbXiDex5FANA830tmF9da3zm2I=\");\n_c2 = StreamlitCharts;\nexport default StreamlitCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventCallback\");\n$RefreshReg$(_c2, \"StreamlitCharts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","Streamlit","jsxDEV","_jsxDEV","EventCallback","event","chartContext","config","eventType","setComponentValue","dataPointIndex","seriesIndex","selectedDataPoints","_c","changeFormatterTofuntion","options","Formatter","Object","keys","map","k","i","xaxis","yaxis","Array","isArray","l","eval","changeEvents","newEvents","chart","events","forEach","newOptions","changeOption","StreamlitCharts","props","_s","setOptions","chart_dict","console","log","JSON","stringify","className","children","series","type","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/kobe/Project/streamlit-apexcharts/streamlit_apexcharts/frontend/src/ChartStreamlit.tsx"],"sourcesContent":["\nimport React, { Component ,useState , useEffect , useRef, useCallback } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport {\n    Streamlit,\n  } from \"streamlit-component-lib\"\n\n// var t =  {\n\n//       dataPointMouseEnter : {type : 'mouseenter'  , return : [ 'seriesIndex'  ,  'dataPointIndex' ]  } ,  \n\n\n//       dataPointSelection : {type :  'mousedown' , return : ['seriesIndex' , 'dataPointIndex' ,  'selectedDataPoints']  }\n\n\n//  }\n\n\n\n  function EventCallback (event :any , chartContext :any , config :any , eventType :any  ) {\n\n    // console.log(event)\n\n    // // console.log(chartContext)\n    // console.log(config)\n\n      // var eventType = event.type \n\n      Streamlit.setComponentValue( { [eventType] :  {dataPointIndex : config.dataPointIndex  , seriesIndex : config.seriesIndex  ,selectedDataPoints :  \"selectedDataPoints\" in  config ?config[\"selectedDataPoints\"] : null  } })   \n\n      // if (eventType == \"mousedown\") {\n\n      //   var dataPoint =config.selectedDataPoints\n    \n      //   var dataPointMap = dataPoint.map( (k :any   , i :any )=>    { \n          \n      //     if ( k !== null ) {\n\n      //         // var dataPoindexList = dataPoint[i]\n\n      //         // dataPoindexList\n  \n      //         return {\n      //             columns  : [index[\"columns\"][i]],  \n      //             index :  [index[\"index\"][dataPoint[i]]]\n      //         }\n  \n      //     }\n  \n      //   }  );\n  \n      //   dataPointMap = dataPointMap.filter((k:any) => k!= null )\n  \n      //   Streamlit.setComponentValue(dataPointMap)   \n\n      // } else {\n\n\n      //   var dataSeries =config.seriesIndex \n\n      //   var dataPoint = config.dataPointIndex\n\n      //   Streamlit.setComponentValue([ {columns : [index[\"columns\"][dataSeries] ] ,index : [index[\"index\"][dataPoint] ]}])  \n\n      // }\n\n \n\n  }\n\n\n\nconst changeFormatterTofuntion = (options :any ) => {\n\n  var Formatter = {...options}\n  // var ChangeFormater = {}\n\n   Object.keys(Formatter).map( (k , i ) => {\n\n      if (k in {xaxis:[] , yaxis : [] }){\n\n          if (Array.isArray(Formatter[k]) ){\n\n\n              // console.log(Formatter[k])\n\n             Formatter[k].map(( l : any , i :any ) => {\n\n                if ( \"labels\" in Formatter[k][i] ) {\n\n                  if ( \"formatter\" in Formatter[k][i][\"labels\"] ) {\n  \n                   Formatter[k][i][\"labels\"][\"formatter\"] = eval(Formatter[k][i][\"labels\"][\"formatter\"])\n                  }\n                };\n\n             })\n\n          }else{\n\n            \n            if ( \"labels\" in Formatter[k] ) {\n\n              if ( \"formatter\" in Formatter[k][\"labels\"] ) {\n\n                Formatter[k][\"labels\"][\"formatter\"] = eval(Formatter[k][\"labels\"][\"formatter\"])\n              }\n            };\n\n\n\n\n          };\n\n\n\n\n\n        };\n    } )\n\n    return Formatter\n\n} \n\n\nconst changeEvents = (options : any ) => {\n\n\n      var newEvents = {...options.chart.events}\n\n      Object.keys(newEvents).forEach((k) => {\n        newEvents[k]  = newEvents[k] ?  (event :any , chartContext :any , config :any ) =>  {     EventCallback(event , chartContext , config   , k ) }   : null\n       })\n\n       var newOptions = {...options , chart  : { ...options.chart , events : newEvents} }\n\n       return newOptions\n}\n\n\nconst changeOption = (options : any ) => {\n\n    return changeFormatterTofuntion(changeEvents(options))\n\n}\n\n\n\n\n\n\n\nfunction StreamlitCharts(props:any) {\n\n    const [options, setOptions] = useState( changeOption(props.chart_dict.options )  )\n\n    const chart = useRef<HTMLInputElement>()\n\n    \n\n    useEffect(  () => {\n\n      console.log(\"effect\")\n      var newOptions = changeOption(props.chart_dict.options)\n\n\n      // chart.hideSeries('Cricket')\n\n      console.log(chart)\n\n      setOptions(newOptions)\n\n    } , [JSON.stringify(props.chart_dict.options) ]\n    )\n\n    console.log(\"rerender\")\n\n\n    return (\n        <div className=\"app\"  >\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n\n            <Chart\n              options={ options}\n              series={props.chart_dict.series} \n              type= { options.chart.type}\n              width= {props.width}\n              height= { options.chart.height}\n              ref={ chart  }\n\n              \n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \nexport default StreamlitCharts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}