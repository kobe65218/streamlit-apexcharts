{"ast":null,"code":"import React from\"react\";import Chart from\"react-apexcharts\";import{Streamlit}from\"streamlit-component-lib\";// var t =  {\n//       dataPointMouseEnter : {type : 'mouseenter'  , return : [ 'seriesIndex'  ,  'dataPointIndex' ]  } ,  \n//       dataPointSelection : {type :  'mousedown' , return : ['seriesIndex' , 'dataPointIndex' ,  'selectedDataPoints']  }\n//  }\nimport{jsx as _jsx}from\"react/jsx-runtime\";function EventCallback(event,chartContext,config,eventType){// console.log(event)\n// // console.log(chartContext)\n// console.log(config)\n// var eventType = event.type \nStreamlit.setComponentValue({[eventType]:{dataPointIndex:config.dataPointIndex,seriesIndex:config.seriesIndex,selectedDataPoints:\"selectedDataPoints\"in config?config[\"selectedDataPoints\"]:null}});// if (eventType == \"mousedown\") {\n//   var dataPoint =config.selectedDataPoints\n//   var dataPointMap = dataPoint.map( (k :any   , i :any )=>    { \n//     if ( k !== null ) {\n//         // var dataPoindexList = dataPoint[i]\n//         // dataPoindexList\n//         return {\n//             columns  : [index[\"columns\"][i]],  \n//             index :  [index[\"index\"][dataPoint[i]]]\n//         }\n//     }\n//   }  );\n//   dataPointMap = dataPointMap.filter((k:any) => k!= null )\n//   Streamlit.setComponentValue(dataPointMap)   \n// } else {\n//   var dataSeries =config.seriesIndex \n//   var dataPoint = config.dataPointIndex\n//   Streamlit.setComponentValue([ {columns : [index[\"columns\"][dataSeries] ] ,index : [index[\"index\"][dataPoint] ]}])  \n// }\n}function StreamlitCharts(props){// const [options, setOptions] = useState( props.chart_dict.options   )\n// const [series, setSeries] = useState( props.chart_dict.series )\n// const [index, setIndex] = useState( props.chart_dict.index )\n// const app =  useRef<HTMLInputElement>(null)\nvar options=props.chart_dict.options;// useEffect(() => {\n//   // console.log(app.current?.parentNode?.parentNode?.parentNode?.parentNode?.parentNode?.parentNode?.pareElement)\n//   // console.log(window.parent.contentWindow)\n// }\n// )\n// useEffect(() => {\n//     var eventsCopy = {...options.chart.events}\n//     Object.keys(eventsCopy).forEach((k) => {\n//       eventsCopy[k]  = eventsCopy[k] ? (event :any , chartContext :any , config :any) => { EventCallback(event , chartContext , config , index)   } : null\n//      })\n//     setOptions( {...options , chart : { ...options.chart , events  : eventsCopy } } )  \n// },[options.chart.events])\nvar eventsCopy={...options.chart.events};Object.keys(eventsCopy).forEach(k=>{eventsCopy[k]=eventsCopy[k]?(event,chartContext,config)=>{EventCallback(event,chartContext,config,k);}:null;});var FroamterCheck=options;Object.keys(FroamterCheck).map((k,i)=>{if(k in{xaxis:[],yaxis:[]}){if(\"labels\"in FroamterCheck[k]){if(\"formatter\"in FroamterCheck[k][\"labels\"]){FroamterCheck[k][\"labels\"][\"formatter\"]=eval(FroamterCheck[k][\"labels\"][\"formatter\"]);}}}});options={...options,chart:{...options.chart,events:eventsCopy}};return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mixed-chart\",children:/*#__PURE__*/_jsx(Chart,{options:options,series:props.chart_dict.series,type:options.chart.type,width:props.width,height:options.chart.height})})})});}export default StreamlitCharts;","map":{"version":3,"names":["React","Chart","Streamlit","jsx","_jsx","EventCallback","event","chartContext","config","eventType","setComponentValue","dataPointIndex","seriesIndex","selectedDataPoints","StreamlitCharts","props","options","chart_dict","eventsCopy","chart","events","Object","keys","forEach","k","FroamterCheck","map","i","xaxis","yaxis","eval","className","children","series","type","width","height"],"sources":["/home/kobe/Project/streamlit-apexcharts/streamlit_apexcharts/frontend/src/ChartStreamlit.tsx"],"sourcesContent":["\nimport React, { Component ,useState , useEffect , useRef } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport {\n    Streamlit,\n  } from \"streamlit-component-lib\"\n\n// var t =  {\n\n//       dataPointMouseEnter : {type : 'mouseenter'  , return : [ 'seriesIndex'  ,  'dataPointIndex' ]  } ,  \n\n\n//       dataPointSelection : {type :  'mousedown' , return : ['seriesIndex' , 'dataPointIndex' ,  'selectedDataPoints']  }\n\n\n//  }\n\n\n\n  function EventCallback (event :any , chartContext :any , config :any , eventType :any  ) {\n\n    // console.log(event)\n\n    // // console.log(chartContext)\n    // console.log(config)\n\n      // var eventType = event.type \n\n      Streamlit.setComponentValue( { [eventType] :  {dataPointIndex : config.dataPointIndex  , seriesIndex : config.seriesIndex  ,selectedDataPoints :  \"selectedDataPoints\" in  config ?config[\"selectedDataPoints\"] : null  } })   \n\n      // if (eventType == \"mousedown\") {\n\n      //   var dataPoint =config.selectedDataPoints\n    \n      //   var dataPointMap = dataPoint.map( (k :any   , i :any )=>    { \n          \n      //     if ( k !== null ) {\n\n      //         // var dataPoindexList = dataPoint[i]\n\n      //         // dataPoindexList\n  \n      //         return {\n      //             columns  : [index[\"columns\"][i]],  \n      //             index :  [index[\"index\"][dataPoint[i]]]\n      //         }\n  \n      //     }\n  \n      //   }  );\n  \n      //   dataPointMap = dataPointMap.filter((k:any) => k!= null )\n  \n      //   Streamlit.setComponentValue(dataPointMap)   \n\n      // } else {\n\n\n      //   var dataSeries =config.seriesIndex \n\n      //   var dataPoint = config.dataPointIndex\n\n      //   Streamlit.setComponentValue([ {columns : [index[\"columns\"][dataSeries] ] ,index : [index[\"index\"][dataPoint] ]}])  \n\n      // }\n\n \n\n  }\n\n\n  \n\nfunction StreamlitCharts(props:any) {\n\n    // const [options, setOptions] = useState( props.chart_dict.options   )\n    // const [series, setSeries] = useState( props.chart_dict.series )\n    // const [index, setIndex] = useState( props.chart_dict.index )\n\n    // const app =  useRef<HTMLInputElement>(null)\n\n    var options = props.chart_dict.options\n\n\n\n    // useEffect(() => {\n\n    //   // console.log(app.current?.parentNode?.parentNode?.parentNode?.parentNode?.parentNode?.parentNode?.pareElement)\n\n    //   // console.log(window.parent.contentWindow)\n\n    // }\n    // )\n\n    \n\n\n\n    // useEffect(() => {\n\n    //     var eventsCopy = {...options.chart.events}\n\n    //     Object.keys(eventsCopy).forEach((k) => {\n\n    //       eventsCopy[k]  = eventsCopy[k] ? (event :any , chartContext :any , config :any) => { EventCallback(event , chartContext , config , index)   } : null\n\n    //      })\n\n    //     setOptions( {...options , chart : { ...options.chart , events  : eventsCopy } } )  \n  \n    // },[options.chart.events])\n\n      var eventsCopy = {...options.chart.events}\n\n\n      Object.keys(eventsCopy).forEach((k) => {\n        eventsCopy[k]  = eventsCopy[k] ? (event :any , chartContext :any , config :any) => { EventCallback(event , chartContext , config   , k )   } : null\n       })\n\n\n       var FroamterCheck = options\n\n       Object.keys(FroamterCheck).map( (k , i ) => {\n\n          if (k in {xaxis:[] , yaxis : [] }){\n\n              if ( \"labels\" in FroamterCheck[k] ) {\n\n                if ( \"formatter\" in FroamterCheck[k][\"labels\"] ) {\n\n                  FroamterCheck[k][\"labels\"][\"formatter\"] = eval(FroamterCheck[k][\"labels\"][\"formatter\"])\n                }\n              }\n\n            }\n        } )\n\n       options  =   {...options , chart : { ...options.chart , events  : eventsCopy } }\n\n\n\n    return (\n        <div className=\"app\" >\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n\n            <Chart\n              options={options}\n              series={props.chart_dict.series} \n              type= {options.chart.type}\n              width= {props.width}\n              height= {options.chart.height}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \nexport default StreamlitCharts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}