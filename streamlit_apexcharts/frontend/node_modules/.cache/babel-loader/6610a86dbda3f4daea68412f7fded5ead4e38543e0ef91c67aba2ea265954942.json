{"ast":null,"code":"var _jsxFileName = \"/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventCallback(event, chartContext, config) {\n  Streamlit.setComponentValue(config.selectedDataPoints);\n}\n_c = EventCallback;\nfunction UpdateOption(option) {\n  console.log(\"rerender : \", option);\n  var events = option.chart.events;\n  var eventsReplace = {};\n  Object.keys(events).forEach(k => {\n    eventsReplace = {\n      ...eventsReplace,\n      [k]: (event, chartContext, config) => {\n        // console.log(index)\n\n        EventCallback(event, chartContext, config);\n      }\n    };\n  });\n  events = eventsReplace;\n\n  // option.chart.events  = events\n\n  option.chart.type = \"line\";\n  return option;\n}\n_c2 = UpdateOption;\nfunction App(props) {\n  _s();\n  const [options, setOptions] = useState(props.chart_dict.options);\n  const [series, setSeries] = useState(props.chart_dict.series);\n  const [index, setIndex] = useState(props.chart_dict.index);\n  useEffect(() => {\n    setOptions({\n      ...options,\n      chart: {\n        ...options.chart,\n        events: {\n          dataPointSelection: (event, chartContext, config) => {\n            var dataPoint = config.selectedDataPoints;\n            var dataPointMap = dataPoint.map((k, i) => {\n              if (k !== null) {\n                return {\n                  columns: [index[\"columns\"][i]],\n                  index: [index[\"index\"][dataPoint[i]]]\n                };\n              }\n            });\n            dataPointMap = dataPointMap.filter(k => k != null);\n            Streamlit.setComponentValue(dataPointMap);\n          }\n        }\n      }\n    });\n  }, []);\n\n  // const [t_, setType] = useState(\"bar\")\n\n  // var  options = props.chart_dict.options \n\n  // var events = options.chart.events \n\n  // var eventsReplace = {}\n\n  // Object.keys(events).forEach(( k : any  ) => {\n\n  //         eventsReplace = { ...eventsReplace , [k] :  (event :any , chartContext :any , config :any) =>  {   \n\n  //             var dataPoint =config.selectedDataPoints\n\n  //             var dataPointMap = dataPoint.map( (k :any   , i :any )=>    { \n\n  //                 if ( k !== null ) {\n\n  //                     return {\n  //                         columns  : [index[\"columns\"][i]],  \n  //                         index :  [index[\"index\"][dataPoint[i]]]\n  //                     }\n\n  //                 }\n\n  //               }  )\n\n  //             dataPointMap = dataPointMap.filter((k:any) => k!= null )\n\n  //             Streamlit.setComponentValue(dataPointMap)             \n  //         } }\n  //     }\n  //     )\n\n  // options.chart.events  = eventsReplace\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mixed-chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: series,\n          type: options.chart.type,\n          width: options.chart.width,\n          height: options.chart.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8NbIealNZJdVBW5aNmB1s2OgX4Y=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EventCallback\");\n$RefreshReg$(_c2, \"UpdateOption\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chart","Streamlit","jsxDEV","_jsxDEV","EventCallback","event","chartContext","config","setComponentValue","selectedDataPoints","_c","UpdateOption","option","console","log","events","chart","eventsReplace","Object","keys","forEach","k","type","_c2","App","props","_s","options","setOptions","chart_dict","series","setSeries","index","setIndex","dataPointSelection","dataPoint","dataPointMap","map","i","columns","filter","className","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx"],"sourcesContent":["\nimport React, { Component ,useState , useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n  } from \"streamlit-component-lib\"\n\n\n  function EventCallback (event :any , chartContext :any , config :any ) {\n\n    Streamlit.setComponentValue(config.selectedDataPoints)\n\n  }\n\n\n  function UpdateOption(option : any ){\n\n    console.log(\"rerender : \" , option)\n\n    var events = option.chart.events \n\n    var eventsReplace = {}\n    \n    Object.keys(events).forEach(( k : any  ) => {\n    \n            eventsReplace = { ...eventsReplace , [k] :  (event :any , chartContext :any , config :any) =>  {   \n\n                // console.log(index)\n                \n                EventCallback(event   , chartContext  , config  )  } }\n\n        }\n        )\n\n    events = eventsReplace\n\n    \n\n    // option.chart.events  = events\n\n    option.chart.type =\"line\"\n\n    return option\n}\n\nfunction App(props:any) {\n\n    const [options, setOptions] = useState( props.chart_dict.options   )\n    const [series, setSeries] = useState( props.chart_dict.series )\n    const [index, setIndex] = useState( props.chart_dict.index )\n\n\n\n    useEffect(() => {\n\n\n      setOptions({...options , chart : { ...options.chart , events  : { dataPointSelection :  (event :any , chartContext :any , config :any) =>  {   \n\n                    var dataPoint =config.selectedDataPoints\n    \n                    var dataPointMap = dataPoint.map( (k :any   , i :any )=>    { \n                        \n                        if ( k !== null ) {\n    \n                            return {\n                                columns  : [index[\"columns\"][i]],  \n                                index :  [index[\"index\"][dataPoint[i]]]\n                            }\n    \n                        }\n    \n                      }  )\n    \n                    dataPointMap = dataPointMap.filter((k:any) => k!= null )\n    \n                    Streamlit.setComponentValue(dataPointMap)             \n                } \n              \n              }  \n            \n            } \n\n\n    } )  \n  \n  \n    }, [] )\n\n    // const [t_, setType] = useState(\"bar\")\n\n    // var  options = props.chart_dict.options \n\n    // var events = options.chart.events \n\n    // var eventsReplace = {}\n    \n    // Object.keys(events).forEach(( k : any  ) => {\n    \n    //         eventsReplace = { ...eventsReplace , [k] :  (event :any , chartContext :any , config :any) =>  {   \n\n    //             var dataPoint =config.selectedDataPoints\n\n    //             var dataPointMap = dataPoint.map( (k :any   , i :any )=>    { \n                    \n    //                 if ( k !== null ) {\n\n    //                     return {\n    //                         columns  : [index[\"columns\"][i]],  \n    //                         index :  [index[\"index\"][dataPoint[i]]]\n    //                     }\n\n    //                 }\n\n    //               }  )\n\n    //             dataPointMap = dataPointMap.filter((k:any) => k!= null )\n\n    //             Streamlit.setComponentValue(dataPointMap)             \n    //         } }\n    //     }\n    //     )\n\n    // options.chart.events  = eventsReplace\n\n    return (\n        <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n\n          {/* <button  onClick={ () => setOptions({...options , chart : { ...options.chart , type  : \"bar\"  }})  } ></button> */}\n            <Chart\n              options={options}\n              series={series} \n              type= {options.chart.type}\n              width= {options.chart.width}\n              height= {options.chart.height}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}