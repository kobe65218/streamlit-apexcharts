{"ast":null,"code":"var _jsxFileName = \"/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventCallback(event, chartContext, config) {\n  Streamlit.setComponentValue(config.selectedDataPoints);\n}\n_c = EventCallback;\nfunction App(props) {\n  _s();\n  var config = props.chart_dict;\n\n  // Declare a new state variable, which we'll call \"count\"\n  const [chartDict, setChartDict] = useState(config);\n  var events = chartDict.options.chart.events;\n  var eventsReplace = {};\n  Object.keys(events).forEach(k => {\n    eventsReplace = {\n      ...eventsReplace,\n      [k]: (e, c, config) => {\n        Streamlit.setComponentValue(config.selectedDataPoints);\n      }\n    };\n  });\n  config.options.chart.events = eventsReplace;\n  setChartDict(chartDict);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mixed-chart\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          options: chartDict.options,\n          series: chartDict.series,\n          type: chartDict.options.chart.type,\n          width: chartDict.options.chart.width,\n          height: chartDict.options.chart.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"eR8UKz7drVvfBJfkfOa3VsY4sC8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventCallback\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Chart","Streamlit","jsxDEV","_jsxDEV","EventCallback","event","chartContext","config","setComponentValue","selectedDataPoints","_c","App","props","_s","chart_dict","chartDict","setChartDict","events","options","chart","eventsReplace","Object","keys","forEach","k","e","c","className","children","series","type","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/kobe/component-template/template/my_component/frontend/src/CharTest.tsx"],"sourcesContent":["\nimport React, { Component ,useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n  } from \"streamlit-component-lib\"\n\n\n  function EventCallback (event :any , chartContext :any , config :any ) {\n\n    Streamlit.setComponentValue(config.selectedDataPoints)\n\n  }\n\n\n\n\nfunction App(props:any) {\n\n    var config = props.chart_dict \n\n    // Declare a new state variable, which we'll call \"count\"\n    const [chartDict, setChartDict] = useState(config)\n\n\n    var events = chartDict.options.chart.events \n\n    var eventsReplace = {}\n\n    Object.keys(events).forEach(( k : any  ) => {\n\n        eventsReplace = { ...eventsReplace , [k] : (e :any  , c : any  , config :any  ) =>  {\n\n\n            Streamlit.setComponentValue(config.selectedDataPoints)\n\n        } }\n\n    }\n    )\n    config.options.chart.events = eventsReplace\n\n    setChartDict(chartDict)\n\n    return (\n        <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={chartDict.options}\n              series={chartDict.series} \n              type= {chartDict.options.chart.type}\n              width= {chartDict.options.chart.width}\n              height= {chartDict.options.chart.height}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n\n\nexport default App;"],"mappings":";;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SACIC,SAAS,QAGJ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,aAAaA,CAAEC,KAAU,EAAGC,YAAiB,EAAGC,MAAW,EAAG;EAErEN,SAAS,CAACO,iBAAiB,CAACD,MAAM,CAACE,kBAAkB,CAAC;AAExD;AAACC,EAAA,GAJQN,aAAa;AASxB,SAASO,GAAGA,CAACC,KAAS,EAAE;EAAAC,EAAA;EAEpB,IAAIN,MAAM,GAAGK,KAAK,CAACE,UAAU;;EAE7B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAACQ,MAAM,CAAC;EAGlD,IAAIU,MAAM,GAAGF,SAAS,CAACG,OAAO,CAACC,KAAK,CAACF,MAAM;EAE3C,IAAIG,aAAa,GAAG,CAAC,CAAC;EAEtBC,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,OAAO,CAAGC,CAAO,IAAO;IAExCJ,aAAa,GAAG;MAAE,GAAGA,aAAa;MAAG,CAACI,CAAC,GAAI,CAACC,CAAM,EAAIC,CAAO,EAAInB,MAAW,KAAQ;QAGhFN,SAAS,CAACO,iBAAiB,CAACD,MAAM,CAACE,kBAAkB,CAAC;MAE1D;IAAE,CAAC;EAEP,CACA,CAAC;EACDF,MAAM,CAACW,OAAO,CAACC,KAAK,CAACF,MAAM,GAAGG,aAAa;EAE3CJ,YAAY,CAACD,SAAS,CAAC;EAEvB,oBACIZ,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBzB,OAAA;MAAKwB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBzB,OAAA;QAAKwB,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BzB,OAAA,CAACH,KAAK;UACJkB,OAAO,EAAEH,SAAS,CAACG,OAAQ;UAC3BW,MAAM,EAAEd,SAAS,CAACc,MAAO;UACzBC,IAAI,EAAGf,SAAS,CAACG,OAAO,CAACC,KAAK,CAACW,IAAK;UACpCC,KAAK,EAAGhB,SAAS,CAACG,OAAO,CAACC,KAAK,CAACY,KAAM;UACtCC,MAAM,EAAGjB,SAAS,CAACG,OAAO,CAACC,KAAK,CAACa;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA1CMF,GAAG;AAAA0B,GAAA,GAAH1B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}